"""
Django settings for shortify project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os

from dotenv import load_dotenv
from django.urls import reverse_lazy
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


load_dotenv()
if (BASE_DIR / ".dev.env").exists():
    load_dotenv(".dev.env", override=True)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# from django.utils import crypto
# crypto.get_random_string(64, "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)")
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "1") == "1"

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'widget_tweaks',

    'accounts',
    'short',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shortify.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'shortify.context_processors.get_hostname',
            ],
        },
    },
]

WSGI_APPLICATION = 'shortify.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


def get_databases():
    import itertools

    # The Default database. Must be configured normaly.
    databases = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv("DATABASE_NAME", "shortify"),
            'HOST': os.getenv("DATABASE_HOST"),
            'USER': os.getenv("DATABASE_USER"),
            'PASSWORD': os.getenv("DATABASE_PASSWORD"),
            'PORT': os.getenv("DATABASE_PORT")
        },
    }

    counter = itertools.count(start=1)

    while (num := next(counter)) and (key := os.getenv(f"DATABASE_REPLICA_{num}")):
        # Replica databases.
        # When configured, all writes will be sent to the default database,
        # but reads will be routed between the default databases and replicas.
        #
        # Environment variables have the following format:
        #   - DATABASE_REPLICA_{num}_NAME or DATABASE_NAME (default: shortify)
        #   - DATABASE_REPLICA_{num}_HOST
        #   - DATABASE_REPLICA_{num}_USER
        #   - DATABASE_REPLICA_{num}_PASSWORD
        #   - DATABASE_REPLICA_{num}_PORT
        #
        # where {num} is a number starting at 1 and incremented for each replica.
        #
        # For example a configuration with two replicas:
        #
        # DATABASE_REPLICA_1_HOST=10.0.1.2
        # DATABASE_REPLICA_1_USER=db_user
        # DATABASE_REPLICA_1_PASSWORD=db_password
        # DATABASE_REPLICA_1_PORT=5432
        #
        # DATABASE_REPLICA_2_HOST=10.0.1.3
        # DATABASE_REPLICA_2_USER=db_user
        # DATABASE_REPLICA_2_PASSWORD=db_password
        # DATABASE_REPLICA_2_PORT=5432

        databases |= {
            key: {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': os.getenv(f"DATABASE_REPLICA_{num}_NAME",
                                  os.getenv("DATABASE_NAME", "shortify")),
                'HOST': os.getenv(f"DATABASE_REPLICA_{num}_HOST"),
                'USER': os.getenv(f"DATABASE_REPLICA_{num}_USER"),
                'PASSWORD': os.getenv(f"DATABASE_REPLICA_{num}_PASSWORD"),
                'PORT': os.getenv(f"DATABASE_REPLICA_{num}_PORT"),
            }
        }

    return databases


# Assign database configuration.
DATABASES = get_databases()

# If you only have one database, there is no need for routing.
if len(DATABASES.keys()) > 1:
    DATABASE_ROUTERS = ['shortify.pg_router.PrimaryReplicaRouter']


# https://docs.djangoproject.com/en/3.2/topics/email/

EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = os.getenv("EMAIL_PORT")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_SUBJECT_PREFIX = os.getenv("EMAIL_SUBJECT_PREFIX")
EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS") == "1"

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
if DEBUG and not EMAIL_HOST:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# https://docs.djangoproject.com/en/3.2/ref/settings/#login-redirect-url
# https://docs.djangoproject.com/en/3.2/ref/settings/#login-url
# https://docs.djangoproject.com/en/3.2/ref/settings/#logout-redirect-url

LOGIN_REDIRECT_URL = reverse_lazy("short:list")
LOGIN_URL = reverse_lazy("login")
LOGOUT_REDIRECT_URL = reverse_lazy("login")


# https://docs.djangoproject.com/en/3.2/topics/auth/customizing/#substituting-a-custom-user-model

# AUTH_USER_MODEL = 'accounts.User'